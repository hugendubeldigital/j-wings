<?xml version="1.0" ?>
<!-- $Id$ -->

<project name="wingS-docbook" basedir=".">

    <!-- read properties from file -->
    <property file="etc/build.properties"/>
    <property file="etc/custom-build.properties"/>

    <path id="saxon_cp">
        <pathelement location="${saxon_folder}/saxon.jar"/>
    </path>

    <path id="fop_cp">
        <pathelement location="${fop_folder}/build/fop.jar"/>
        <fileset dir="${fop_folder}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>


    <target name="check_env">
        <fail message="Please copy etc/build.properties to etc/custom-build.properties and adapt custom-build.properties to reflect your system's folders.">
            <condition>
                <not>
                    <and>
                        <isset property="docbook_folder"/>
                        <isset property="saxon_folder"/>
                        <isset property="fop_folder"/>
                    </and>
                </not>
            </condition>
        </fail>
        <fail message="One of the folders does not exist, check etc/custom-build.properties.">
            <condition>
                <not>
                    <and>
                        <available file="${docbook_folder}" type="dir"/>
                        <available file="${saxon_folder}" type="dir"/>
                        <available file="${fop_folder}" type="dir"/>
                    </and>
                </not>
            </condition>
        </fail>
    </target>

    <target name="init" depends="check_env">
        <mkdir dir="build"/>
        <mkdir dir="dist"/>
    </target>

    <target name="html" depends="init">
        <antcall target="saxon">
            <param name="docname" value="wingS-whitepaper"/>
            <param name="target" value="html" />
        </antcall>
        <antcall target="saxon">
            <param name="docname" value="wingS-userguide"/>
            <param name="target" value="html" />
        </antcall>
    </target>

    <target name="fo" depends="init">
        <antcall target="saxon">
            <param name="docname" value="wingS-whitepaper"/>
            <param name="target" value="fo" />
        </antcall>
        <antcall target="saxon">
            <param name="docname" value="wingS-userguide"/>
            <param name="target" value="fo" />
        </antcall>
    </target>

    <target name="pdf" depends="fo">
        <antcall target="fop">
            <param name="docname" value="wingS-whitepaper"/>
        </antcall>
        <antcall target="fop">
            <param name="docname" value="wingS-userguide"/>
        </antcall>
    </target>

    <target name="saxon">
        <java classname="com.icl.saxon.StyleSheet">
            <classpath refid="saxon_cp"/>
            <arg line="-o build/${docname}.${target}"/>
            <arg value="src/${docname}.xml"/>
            <arg value="${docbook_folder}/${target}/docbook.xsl"/>
            <sysproperty key="http.proxyHost" value="${http.proxyHost}"/>
            <sysproperty key="http.proxyPort" value="${http.proxyPort}"/>
        </java>
    </target>

    <target name="fop">
        <echo message="build/${docname}.fo build/${docname}.pdf"/>
        <java classname="org.apache.fop.apps.Fop">
            <classpath refid="fop_cp"/>
            <arg value="build/${docname}.fo"/>
            <arg value="build/${docname}.pdf"/>
            <sysproperty key="http.proxyHost" value="${http.proxyHost}"/>
            <sysproperty key="http.proxyPort" value="${http.proxyPort}"/>
        </java>
    </target>


    <target name="dist" depends="clean,html,pdf">
        <copy todir="dist">
            <fileset dir="build" includes="**/*.html,**/*.pdf"/>
        </copy>
    </target>

    <target name="clean" description="clean up">
        <delete dir="build"/>
        <delete dir="dist"/>
    </target>

</project>
