<template name="CheckBoxCG" for="org.wings.SCheckBox">

<comp-property type="SIcon" name="selectedIcon">org/wings/icons/SelectedCheckBox.gif</comp-property>
<comp-property type="SIcon" name="icon">org/wings/icons/NotSelectedCheckBox.gif</comp-property>
<comp-property type="SIcon" name="disabledIcon">org/wings/icons/DisabledNotSelectedCheckBox.gif</comp-property>
<comp-property type="SIcon" name="disabledSelectedIcon">org/wings/icons/DisabledSelectedCheckBox.gif</comp-property>

void writeText(final Device device, SCheckBox checkBox, String attr)
    throws IOException
{
    if (checkBox.getShowAsFormComponent() && checkBox.isEnabled())
        writeFormText(device, checkBox, attr);
    else
        writeAnchorText(device, checkBox, attr);
}

void writeIcon(final Device device, SCheckBox checkBox, String attr)
    throws IOException
{
    if (checkBox.getShowAsFormComponent() && checkBox.isEnabled())
        writeFormIcon(device, checkBox, attr);
    else
        writeAnchorIcon(device, checkBox, attr);
}

void writeAnchorText(final Device device, SCheckBox checkBox, String attr)
    throws IOException
{
    boolean noBreak = checkBox.isNoBreak();
    String text = checkBox.getText();
    if (text == null || text.length() == 0) {
	return;
    }

    if (checkBox.isEnabled()) {
        %><a href="<%
        writeAnchorAddress(device, checkBox);
        %>"<%
        // writeEvents();
    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    if (noBreak) { %><nobr><% }
    %><%=checkBox.getText()%><%
    if (noBreak) { %></nobr><% }

    if (checkBox.isEnabled()) {
        %></a><%
    }
    else {
        %></span><%
    }
}

void writeAnchorIcon(final Device device, SCheckBox checkBox, String attr)
     throws IOException
{
    SIcon icon = null;
    if (checkBox.isEnabled())
        icon = checkBox.isSelected() ? checkBox.getSelectedIcon() : checkBox.getIcon();
    else
        icon = checkBox.isSelected() ? checkBox.getDisabledSelectedIcon() : checkBox.getDisabledIcon();

    if (checkBox.isEnabled()) {
        %><a href="<%
        writeAnchorAddress(device, checkBox);
        %>"<%
    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    String tooltip = checkBox.getToolTipText();
    if (tooltip == null)
        tooltip = checkBox.getText();

    %><img border="0" src="<%
    %><%=icon.getURL()%>"<%

    if (checkBox.isEnabled()) {
       // render rollover
       SIcon rolloverIcon = checkBox.isSelected() ? checkBox.getRolloverSelectedIcon() : checkBox.getRolloverIcon();
       SIcon pressedIcon = checkBox.getPressedIcon();

       if ( rolloverIcon!=null || pressedIcon!=null ) {
           String iconName = "Icon_" + checkBox.getComponentId();

           %> name="<%=iconName%>"<%
   
           if ( rolloverIcon!=null ) {
               %> onMouseover="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon.getURL()
               %>';}" onMouseout="if(document.images){document.<%=iconName
               %>.src='<%=icon.getURL()
               %>';}"<%
           }

           if ( pressedIcon!=null ) {
               %> onMousedown="if(document.images){document.<%=iconName
               %>.src='<%=pressedIcon.getURL()
               %>';}" onMouseUp="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon!=null ? rolloverIcon.getURL() : icon.getURL()
               %>';}"<%
           }
        }
    }

    %><%|width=icon.getIconWidth()%><%
    %><%|height=icon.getIconHeight()%><%
    %><%|alt=tooltip%> /><%
    // writeEvents();

    if (checkBox.isEnabled()) {
        %></a><%
    }
    else {
        %></span><%
    }
}

protected void writeAnchorAddress(Device d, SCheckBox checkBox) 
    throws IOException
{
    RequestURL addr = checkBox.getRequestURL();
    addr.addParameter(checkBox.getNamePrefix(), 
                      checkBox.getToggleSelectionParameter());
    addr.write(d);
}

void writeFormText(final Device device, SCheckBox checkBox, String attr)
    throws IOException
{
    %><label for="<%=checkBox.getComponentId()%>"<%
    %><%|class=attr%>><%
    %><%=checkBox.getText()%><%
    %></label><%
}

void writeFormIcon(final Device device, SCheckBox checkBox, String attr)
     throws IOException
{
    %><input type="<%=checkBox.getType()%>" name="<%
    %><%=checkBox.getNamePrefix()%>"<%
    %><%|tabindex=checkBox.getFocusTraversalIndex()%><%
    %><%|class=attr%><%
    // writeEvents();
    %><%|id=checkBox.getComponentId()%><%
    %><%|value=checkBox.getSelectionParameter()%><%
    if (checkBox.isSelected()) {
        %> checked="1" /><%
    }
    else {
        %> /><%
    }
}

<write>
<%
    SCheckBox checkBox = (SCheckBox)component;

    String style = Utils.style(component);
    SIcon icon = checkBox.isSelected() ? checkBox.getSelectedIcon() : checkBox.getIcon();
    String  text = component.getText();
    int horizontalTextPosition = component.getHorizontalTextPosition();
    int verticalTextPosition   = component.getVerticalTextPosition();

    if (horizontalTextPosition == NO_ALIGN)
	horizontalTextPosition = RIGHT;
    if (verticalTextPosition == NO_ALIGN)
	verticalTextPosition = CENTER;

    if (icon == null && !component.getShowAsFormComponent()) {
        writeText(device, component, Utils.style(component));
    } else if (text == null || text.length() == 0) {
        writeIcon(device, component, Utils.style(component));
    } else {
        %><table><%
        // if we are on the top, create a top row
        if (verticalTextPosition == TOP) {
            %><tr><td><% 
            if (horizontalTextPosition == LEFT) { 
                writeText(device, component, style);
            }
            %></td><td><%
            if (horizontalTextPosition == CENTER) { 
                writeText(device, component, style);
            }
            %></td><td><%
            if (horizontalTextPosition == RIGHT) {
                writeText(device, component, style);
            }
            %></td></tr><%
        }

        // we always have a center row, since we have to write the icon
        if (verticalTextPosition == CENTER) {
            %><tr><td><%
            if (horizontalTextPosition == LEFT) { 
                writeText(device, component, style);
            }
            %></td><td><% 
            if (horizontalTextPosition == CENTER) { 
               writeText(device, component, style);
            }
            // the rendered icon in the center
            writeIcon(device, component, style); 
            %></td><td><% 
            if (horizontalTextPosition == RIGHT) { 
               writeText(device, component, style);
            }
            %></td></tr><%
        } else {
            %><tr><td></td><td><%
            writeIcon(device, component, style);
            %></td><td></td></tr><%
        }

        // ..
        if (verticalTextPosition == BOTTOM) {
            %><tr><td><% 
            if (horizontalTextPosition == LEFT) {
              writeText(device, component, style);
            }
            %></td><td><% 
            if (horizontalTextPosition == CENTER) {
              writeText(device, component, style);
            }
            %></td><td><%
            if (horizontalTextPosition == RIGHT) {
               writeText(device, component, style);
            }
            %></td></tr><%
        }
        %></table><%
    }
    if (component.isEnabled() && component.getShowAsFormComponent()) {
        // could be a util method
        %><input type="hidden"<%
        %><%|name=component.getNamePrefix()%><%
        %><%|value=checkBox.getDeselectionParameter()%><%
        %>/><%
   }
%></write>
</template>
