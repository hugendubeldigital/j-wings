<template name="ClickableCG" for="org.wings.SClickable">

void writeText(final Device device, SClickable clickable, String attr)
    throws IOException
{
    boolean noBreak = clickable.isNoBreak();
    String text = clickable.getText();
    if (text == null || text.length() == 0) {
	return;
    }

    SimpleURL url = null;
    
    if ( clickable.getEvent()!=null && clickable.getRequestTarget()!=null) {
        RequestURL u = clickable.getRequestURL();
        u.addParameter(clickable.getRequestTarget().getNamePrefix(),
	               clickable.getEvent());
        url = u;
    } else {
        AnchorProperties anchor	= AnchorRenderStack.get();
	if ( anchor!=null ) {
	    url = anchor.getURL();
	}	
    }

    boolean writeAnchor = clickable.isEnabled() && 
        url!=null;

    if ( writeAnchor ) {
        %><a href="<%=url%>"<% 
    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    if (noBreak) { %><nobr><% }
    %><%=clickable.getText()%><%
    if (noBreak) { %></nobr><% }

    if ( writeAnchor ) {
        %></a><%
    }
     else {
        %></span><%
    }
}

SIcon getIcon(SClickable clickable) {
    if (clickable.isEnabled())
        return clickable.isSelected() ? 
           clickable.getSelectedIcon() : clickable.getIcon();
    else
        return clickable.isSelected() ? 
           clickable.getDisabledSelectedIcon() :clickable.getDisabledIcon();
}

void writeIcon(final Device device, SClickable clickable, String attr)
     throws IOException
{
    SIcon icon = getIcon(clickable);

    SimpleURL url = null;
    
    if ( clickable.getEvent()!=null && clickable.getRequestTarget()!=null) {
        RequestURL u = clickable.getRequestURL();
        u.addParameter(clickable.getRequestTarget().getNamePrefix(),
	               clickable.getEvent());
        url = u;
    } else {
        AnchorProperties anchor	= AnchorRenderStack.get();
	if ( anchor!=null ) {
	    url = anchor.getURL();
	}	
    }

    boolean writeAnchor = clickable.isEnabled() && 
        url!=null;
    
    if ( writeAnchor ) {
        %><a href="<%=url%>"<% 
    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    String tooltip = clickable.getToolTipText();
    if (tooltip == null)
        tooltip = clickable.getText();

    %><img border="0" src="<%
    %><%=icon.getURL()%>"<%

    if ( clickable.isEnabled() ) {
       // render rollover
       SIcon rolloverIcon = clickable.isSelected() ? 
           clickable.getRolloverSelectedIcon() : clickable.getRolloverIcon();
       SIcon pressedIcon = clickable.getPressedIcon();


       if ( rolloverIcon!=null || pressedIcon!=null ) {
           String iconName = "Icon_" + clickable.getUnifiedId();

           %> name="<%=iconName%>"<%
   
           if ( rolloverIcon!=null ) {
               %> onMouseover="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon.getURL()
               %>';}" onMouseout="if(document.images){document.<%=iconName
               %>.src='<%=icon.getURL()
               %>';}"<%
           }

           if ( pressedIcon!=null ) {
               %> onMousedown="if(document.images){document.<%=iconName
               %>.src='<%=pressedIcon.getURL()
               %>';}" onMouseUp="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon!=null ? rolloverIcon.getURL() : icon.getURL()
               %>';}"<%
           }
        }
    }

    %><%|width=icon.getIconWidth()%><%
    %><%|height=icon.getIconHeight()%><%
    %><%|alt=tooltip%> /><%

    if ( writeAnchor ) {
        %></a><%
    }
    else {
        %></span><%
    }
}

<write>
<%
    String style = (component.getStyle() != null) ? component.getStyle().getName() : null;
    final String attr = (component.getAttributes().size() > 0) ? ("_" + component.getUnifiedId()) : null;

    SIcon icon = getIcon(component);

    String  text = component.getText();
    int     horizontalTextPosition = component.getHorizontalTextPosition();
    int     verticalTextPosition   = component.getVerticalTextPosition();
  
    if (horizontalTextPosition == NO_ALIGN)
	horizontalTextPosition = RIGHT;
    if (verticalTextPosition == NO_ALIGN)
	verticalTextPosition = CENTER;

    if (icon == null) {
         writeText(device, component, attr);
    } else if (text == null) {
         writeIcon(device, component, attr);
    } else {
        %><table><%
        // if we are on the top, create a top row
        if (verticalTextPosition == TOP) {
 	       %><tr><td<%|class=style%>><% 
 	       if (horizontalTextPosition == LEFT) { 
 		  writeText(device, component, attr);
 	       }
 	       %></td><td<%|class=style%>><%
 	       if (horizontalTextPosition == CENTER) { 
 		    writeText(device, component, attr);
	       }
	       %></td><td<%|class=style%>><%
	       if (horizontalTextPosition == RIGHT) {
		  writeText(device, component, attr);
	       }
	       %></td></tr><%
       }

       // we always have a center row, since we have to write the icon
       if (verticalTextPosition == CENTER) {
	   %><tr><td<%|class=style%>><%
	   if (horizontalTextPosition == LEFT) { 
	       writeText(device, component, attr);
	   }
	   %></td><td<%|class=style%>><% 
	   if (horizontalTextPosition == CENTER) { 
	      writeText(device, component, attr);
	   }
	   // the rendered icon in the center
	   writeIcon(device, component, attr); 
	   %></td><td<%|class=style%>><% 
	   if (horizontalTextPosition == RIGHT) { 
	      writeText(device, component, attr);
	   }
	   %></td></tr><%
       } else {
	   %><tr><td></td><td<%|class=style%>><%
	   writeIcon(device, component, attr);
	   %></td><td></td></tr><%
       }

       // ..
       if (verticalTextPosition == BOTTOM) {
	   %><tr><td<%|class=style%>><% 
	   if (horizontalTextPosition == LEFT) {
	     writeText(device, component, attr);
	   }
	   %></td><td<%|class=style%>><% 
	   if (horizontalTextPosition == CENTER) {
	     writeText(device, component, attr);
	   }
	   %></td><td<%|class=style%>><%
	   if (horizontalTextPosition == RIGHT) {
	      writeText(device, component, attr);
	   }
	   %></td></tr><%
       } 
       %></table><%
    }
%>
</write>
</template>
