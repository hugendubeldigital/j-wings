<template name="ButtonCG" for="org.wings.SAbstractButton">

protected void writeText(final Device device, SAbstractButton abstractButton, String attr)
    throws IOException
{
    if (abstractButton.getShowAsFormComponent() )
        writeFormText(device, abstractButton, attr);
    else
        writeAnchorText(device, abstractButton, attr);
}

protected void writeIcon(final Device device, SAbstractButton abstractButton, String attr)
    throws IOException
{
    if (abstractButton.getShowAsFormComponent() )
        writeFormIcon(device, abstractButton, attr);
    else
        writeAnchorIcon(device, abstractButton, attr);
}

protected void writeAnchorText(final Device device, SAbstractButton abstractButton, String attr)
    throws IOException
{
    String text = abstractButton.getText();
    if (text == null || text.length() == 0) {
	return;
    }

    boolean enabled = abstractButton.isEnabled() &&
	(abstractButton.getGroup()==null || !abstractButton.isSelected());
	

    //    boolean noBreak = abstractButton.isNoBreak();

    if ( enabled ) 
    {
        %><a href="<%
        writeAnchorAddress(device, abstractButton);
        %>"<%
	Utils.writeEvents(device, abstractButton);
        %><%|title=abstractButton.getToolTipText()%><%
	
    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    /*
     * noBreak commented out, because it does not work together with
     * styles and konqueror 3.0. (should be: white-space: nowrap)
     */
    /* if (noBreak) { %><nobr><% } */
    if (abstractButton.isEscapeSpecialChars()) {
        %><%=text%><%
    }
    else {
	%><%#text%><% // write raw.
    }
    /* if (noBreak) { %></nobr><% } */

    if ( enabled ) 
    {
        %></a><%
    }
    else {
        %></span><%
    }
}

protected SIcon getIcon(SAbstractButton abstractButton) {
    if ( abstractButton.isSelected() ) {
        return abstractButton.isEnabled() 
	        ? abstractButton.getSelectedIcon()
		: abstractButton.getDisabledSelectedIcon();
    } else {
	return abstractButton.isEnabled() 
	        ? abstractButton.getIcon()
                : abstractButton.getDisabledIcon();
    }
}

protected void writeDynamicIcons(final Device device, SAbstractButton abstractButton, SIcon origIcon,
				 String iconName, boolean renderNameAttribute)
     throws IOException
{
    if ( abstractButton.isEnabled() &&
	(abstractButton.getGroup()==null || !abstractButton.isSelected()) ) {
       // render rollover
       SIcon rolloverIcon = abstractButton.getRolloverIcon();
       SIcon pressedIcon = abstractButton.getPressedIcon();

       if ( rolloverIcon!=null || pressedIcon!=null ) {
	   if ( renderNameAttribute) {
	       %> name="<%=iconName%>"<%
	   } // end of if ()
	   
   
           if ( rolloverIcon!=null ) {
               %> onMouseover="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon.getURL()
               %>';}" onmouseout="if(document.images){document.<%=iconName
               %>.src='<%=origIcon.getURL()
               %>';}"<%
           }

           if ( pressedIcon!=null ) {
               %> onMousedown="if(document.images){document.<%=iconName
               %>.src='<%=pressedIcon.getURL()
               %>';}" onmouseup="if(document.images){document.<%=iconName
               %>.src='<%=rolloverIcon!=null ? rolloverIcon.getURL() : origIcon.getURL()
               %>';}"<%
           }
        }
    }

}

protected void writeAnchorIcon(final Device device, SAbstractButton abstractButton, String attr)
     throws IOException
{
    SIcon icon = getIcon(abstractButton);
    if (icon == null) return;

    boolean enabled = abstractButton.isEnabled() &&
	(abstractButton.getGroup()==null || !abstractButton.isSelected());

    if ( enabled ) {
        %><a href="<%
        writeAnchorAddress(device, abstractButton);
        %>"<%|title=abstractButton.getToolTipText()%><%

    }
    else {
        %><span<%
    }
    %><%|class=attr%>><%

    %><img border="0" src="<%
    %><%=icon.getURL()%>"<%
    writeDynamicIcons(device, abstractButton, icon, "Icon_" + abstractButton.getComponentId(),true);
    %><%|width=icon.getIconWidth()%><%
    %><%|height=icon.getIconHeight()%><%
    Utils.writeEvents(device, abstractButton);
    %><%|alt=abstractButton.getToolTipText()%> /><%

    if ( enabled ) {
        %></a><%
    }
    else {
        %></span><%
    }
}

protected void writeAnchorAddress(Device d, SAbstractButton abstractButton) 
    throws IOException
{
    RequestURL addr = abstractButton.getRequestURL();
    addr.addParameter(abstractButton,
                      abstractButton.getToggleSelectionParameter());
    addr.write(d);
}

protected void writeFormText(final Device device, SAbstractButton abstractButton, String attr)
    throws IOException
{
    String text = abstractButton.getText();
    if ( text == null || text.length() == 0 ) {
	return;
    }
    
    if ( getIcon(abstractButton)!=null ) {
    %><label for="<%=abstractButton.getComponentId()%>"<%
    %><%|tabindex=abstractButton.getFocusTraversalIndex()%><%
    %><%|class=attr%><%
    Utils.writeEvents(device, abstractButton);
    %>><%
    if (abstractButton.isEscapeSpecialChars()) {
        %><%=text%><%
    }
    else {
        %><%#text%><% // write raw.
    }
    %></label><%
    } else {
	 
    %><input type="<%=abstractButton.getType()%>"<%
    %> name="<%=abstractButton.getEncodedLowLevelEventId()%>"<%
    %><%|tabindex=abstractButton.getFocusTraversalIndex()%><%
    %><%|class=attr%><%
    Utils.writeEvents(device, abstractButton);
    %> value="<%
    if (abstractButton.isEscapeSpecialChars()) {
        %><%=text%><%
    }
    else {
        %><%#text%><% // write raw.
    }
    %>"<%
    if ( !abstractButton.isEnabled() ||
	 abstractButton.getGroup()!=null && abstractButton.isSelected() ) {
	%> disabled<%
    }
    %>/><%
    }
}

protected void writeFormIcon(final Device device, SAbstractButton abstractButton, String attr)
     throws IOException
{
    SIcon icon = getIcon(abstractButton);
    if (icon == null) return;

    %><input type="image" border="0" src="<%
    %><%=icon.getURL()%>"<%
    %><%|class=attr%><%
    %><%|width=icon.getIconWidth()%><%
    %><%|height=icon.getIconHeight()%><%
    %><%|name=abstractButton.getEncodedLowLevelEventId()%><%
    %><%|id=abstractButton.getComponentId()%><%
    writeDynamicIcons(device, abstractButton, icon, abstractButton.getComponentId(),
		      false);
    %><%|alt=abstractButton.getToolTipText()%><%
    %><%|title=abstractButton.getToolTipText()%><%
    // writeEvents();
    %><%|text=abstractButton.getToolTipText()%><%
    if ( !abstractButton.isEnabled() ||
	 abstractButton.getGroup()!=null && abstractButton.isSelected() ) {
	%> disabled<%
    }
    %>/><%
}

protected boolean renderLayoutWithoutIcon() {
    return false;
}

<write>
<%
    String style = component.isSelected() ? Utils.selectionStyle(component) : Utils.style(component);

    SIcon icon = getIcon(component);

    String  text = component.getText();
    int     horizontalTextPosition = component.getHorizontalTextPosition();
    int     verticalTextPosition   = component.getVerticalTextPosition();
  
    if (horizontalTextPosition == NO_ALIGN)
	horizontalTextPosition = RIGHT;
    if (verticalTextPosition == NO_ALIGN)
	verticalTextPosition = CENTER;

    if (icon == null && !renderLayoutWithoutIcon()) {
         // fixme: this handles only one source of attributes
         writeText(device, component, style);
    } else if (text == null || text.length() == 0) {
         // fixme: this handles only one source of attributes
         writeIcon(device, component, style);
    } else {
        %><table cellspacing="0"><%
        // if we are on the top, create a top row
        if (verticalTextPosition == TOP) {
 	       %><tr><td><% 
 	       if (horizontalTextPosition == LEFT) { 
 		  writeText(device, component, style);
 	       }
 	       %></td><td><%
 	       if (horizontalTextPosition == CENTER) { 
 		    writeText(device, component, style);
	       }
	       %></td><td><%
	       if (horizontalTextPosition == RIGHT) {
		  writeText(device, component, style);
	       }
	       %></td></tr><%
       }

       // we always have a center row, since we have to write the icon
       if (verticalTextPosition == CENTER) {
	   %><tr><td><%
	   if (horizontalTextPosition == LEFT) { 
	       writeText(device, component, style);
	   }
	   %></td><td><% 
	   if (horizontalTextPosition == CENTER) { 
	      writeText(device, component, style);
	   }
	   // the rendered icon in the center
	   writeIcon(device, component, style); 
	   %></td><td><% 
	   if (horizontalTextPosition == RIGHT) { 
	      writeText(device, component, style);
	   }
	   %></td></tr><%
       } else {
	   %><tr><td></td><td><%
	   writeIcon(device, component, style);
	   %></td><td></td></tr><%
       }

       // ..
       if (verticalTextPosition == BOTTOM) {
	   %><tr><td><% 
	   if (horizontalTextPosition == LEFT) {
	     writeText(device, component, style);
	   }
	   %></td><td><% 
	   if (horizontalTextPosition == CENTER) {
	     writeText(device, component, style);
	   }
	   %></td><td><%
	   if (horizontalTextPosition == RIGHT) {
	      writeText(device, component, style);
	   }
	   %></td></tr><%
       } 
       %></table><%
    }
%>
</write>
</template>
