<?xml version="1.0"?><!-- -*-sgml-*- -->
<!-- ant build file for wingS -->
<!-- $Id$ -->

<project name="wingS" default="main" basedir=".">
  <path id="build.classpath">
    <pathelement path="${java.class.path}/" />
    <fileset dir="lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="testcompile.classpath">
    <path location="build/testclasses"/>
    <fileset dir="build/dist/lib">
      <include name="*.jar" />
    </fileset>
    <fileset dir="testlib">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="test.classpath">
    <path refid="build.classpath" />
    <path location="build/testclasses"/>
    <fileset dir="build/dist/lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- ==================== Properties ==================== -->
  <target name="init">
    <tstamp/>
    <!-- directories -->
    <property name="home"    value="." />
    <property name="src"     value="src" />
    <property name="build"   value="build" />
    <property name="classes" value="${build}/classes" />
    <property name="dist"    value="${build}/dist" />
    <property name="doc"     value="${build}/doc" />
    <property name="distlib" value="${dist}/lib" />
    <property name="lib"     value="lib" />        <!-- external libraries -->
    <property name="testsrc"     value="testsrc" />
    <property name="testlib"     value="testlib" />
    <property name="testclasses"     value="${build}/testclasses" />
    <property name="testreport"     value="${build}/testreport" />

    <!-- read additional properties from file -->
    <property file="build.properties" />
  </target>

  <!-- ==================== Preparations ==================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${distlib}" />
    <mkdir dir="${doc}" />
    <mkdir dir="${doc}/api" />
    <mkdir dir="${lib}" />     <!-- avoid errors in case it does not exist -->
    <mkdir dir="${testclasses}" />
    <mkdir dir="${testreport}" />
  </target>


  <!-- ==================== Build wingS ==================== -->
  <target name="build" depends="wings.jar,plaf" />

  <target name="compile" depends="prepare">
    <javac srcdir="${src}" destdir="${classes}" debug="on" deprecation="off">
      <classpath refid="build.classpath" />
    </javac>
    <copy todir="${classes}">
      <fileset dir="${src}">
        <include name="**/*.properties" />
        <include name="**/*.gif" />
        <include name="**/*.png" />
        <include name="**/*.css" />
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="wings.jar" />
  <target name="wings.jar" depends="compile">
    <jar jarfile="${distlib}/wings.jar" basedir="${classes}">
      <exclude name="org/wings/plaf/xhtml/**" />
    </jar>

    <copy todir="${distlib}">
      <fileset dir="${lib}">
        <!-- usual names for jsdk ..>
        <exclude name="jsdk2.0.jar" />
        <exclude name="servlet.jar" /-->
      </fileset>
    </copy>
  </target>


  <!-- ==================== LookAndFeel Jars ==================== -->
  <target name="plaf" depends="css1.jar" />

  <target name="css1.jar" depends="compile,claf-compile">
    <jar jarfile="${distlib}/css1.jar">
      <fileset dir="${classes}">
        <include name="org/wings/plaf/xhtml/*.class" />
        <include name="org/wings/plaf/xhtml/css1/*" />
        <include name="org/wings/plaf/css1/*" />  <!-- TEST: claf-compiled -->
        <exclude name="org/wings/plaf/xhtml/css1/default.properties" />
      </fileset>
      <fileset dir="${classes}/org/wings/plaf/xhtml/css1">
        <include name="default.properties" />
      </fileset>
    </jar>
  </target>

  <target name="claf" depends="compile">
    <taskdef name="claf"
	     classpath="${classes}"
	     classname="org.wings.plaf.compiler.ClafTask"/>
    <claf destdir="build/src"
	  package="org.wings.plaf.css1">
      <fileset dir="src">
        <include name="org/wings/plaf/css1/*.plaf"/>
      </fileset>
    </claf>
  </target>

  <target name="claf-compile" depends="claf">
    <javac srcdir="build/src" 
           destdir="${classes}"
           debug="on" 
           deprecation="off">
      <classpath refid="build.classpath" />
    </javac>
  </target>

  <target name="testcompile" depends="wings.jar,css1.jar">
    <javac srcdir="${testsrc}" destdir="${testclasses}"
	   debug="true"
	   deprecation="${build.deprecation}"
	   encoding="ISO8859-1">
      <classpath refid="testcompile.classpath"/>
    </javac>
    <copy file="${distlib}/css1.jar" todir="${testsrc}/org/wings/plaf"/>
    <copy todir="${testclasses}">
      <fileset dir="testres"/>
    </copy>
  </target>

  <target name="test" depends="testcompile">
    <taskdef name="junit"
	     classpath="${testlib}/junit.jar"
	     classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask"/>

    <junit>
      <formatter type="plain"/>
      <classpath refid="test.classpath"/>
      <batchtest fork="yes" todir="${testreport}">
        <fileset dir="${testclasses}">
          <include name="**/Test*.class"/>
          <exclude name="**/*$$*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>


  <!-- ==================== Generate API Docs ==================== -->
  <target name="doc" depends="prepare">
    <javadoc packagenames="org.wings.*"
             maxmemory="128m"
             sourcepath="${src}"
             destdir="${doc}/api"
	     classpathref="build.classpath"
             version="true"
             use="true"
             windowtitle="wingS ${wings.version}"
             doctitle="wingS ${wings.version}"
             bottom="wingS swings ;-)"
    />
  </target>
  <target name="javadoc" depends="doc" description="create api-doc"/>

  <!-- ==================== Admin ==================== -->
  <target name="clean" depends="init"
          description="cleanup build results">
    <delete dir="${build}"/>
    <delete dir="${deploy}"/>
  </target>

  <target name="cleansource" depends="init" 
          description="cleanup sources (tmp/backup-files, classes)">
    <delete>
      <fileset dir="${src}">
        <include name="**/*.class" />
        <include name="**/*.u" />
        <include name="**/*~" />
      </fileset>
    </delete>
  </target>

  <target name="all" depends="clean,build" description="re-build everything"/>
  <target name="main" depends="build" description="build changed files"/>


  <!-- target name="demo" depends="build" description="build demo">
    <ant dir="demo"/>
  </target -->

  <target name="dist" depends="init" description="create distribution tar.gz">
      <property name="distname" value="${ant.project.name}-${wings.version}"/>
      <delete dir="${distname}"/>
      <mkdir dir="${distname}"/>

      <!-- copy all relevant files for the distribution -->
      <filter token="VERSION" value="${wings.version}" />
      <copy todir="${distname}" file="VERSION" filtering="true" />
      <copy todir="${distname}">
         <fileset dir="${home}">
	    <include name="COPYING" />
	    <include name="CREDITS" />
	    <include name="INSTALL" />
	    <include name="TODO" />
	    <include name="build.*" />
	    <include name="src/" />
	    <include name="demo/" />
	    <exclude name="demo/build" />
	    <exclude name="**/CVS" />
	    <!-- transition to a Makefile free world .. -->
	    <exclude name="**/Makefile" />
         </fileset>
      </copy>
      <tar tarfile="${distname}.tar" basedir="." includes="${distname}/" />
      <gzip src="${distname}.tar" zipfile="${distname}.tar.gz" />
      <delete file="${distname}.tar" />
      <delete dir="${distname}" />
  </target>
</project>
<!--
 Local variables:
 compile-command: "ant -emacs -find build.xml"
 End:
-->
