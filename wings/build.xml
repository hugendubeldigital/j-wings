<?xml version="1.0"?><!-- -*-sgml-*- -->
<!-- ant build file for wingS -->
<!-- $Id$ -->

<project name="wingS" default="main" basedir=".">
  <!-- read properties from file -->
  <property file="custom-build.properties" />
  <property file="build.properties" />

  <!-- directories -->
  <property name="home"        value="." />
  <property name="src"         value="src" />
  <property name="patches"     value="patches" />
  <property name="build"       value="build" />
  <property name="build.class" value="${build}/class" />
  <property name="build.doc"   value="${build}/doc" />
  <property name="build.src"   value="${build}/src" />
  <property name="dist"        value="dist" />
  <property name="dist.doc"    value="${dist}/doc" />
  <property name="dist.src"    value="${dist}/src" />
  <property name="dist.lib"    value="${dist}/lib" />
  <property name="dist.demo"   value="${dist}/demo" />

  <path id="build.classpath">
    <pathelement path="${java.class.path}/" />
    <fileset dir="lib">
      <include name="*.jar" />
    </fileset>
  </path>

  <!-- ==================== Preparations ==================== -->
  <target name="prepare">
    <tstamp/>
    <mkdir dir="${build}" />
    <mkdir dir="${build.class}" />
    <mkdir dir="${build.doc}" />
    <mkdir dir="${build.src}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${dist.doc}" />
    <mkdir dir="${dist.src}" />
    <mkdir dir="${dist.lib}" />
    <mkdir dir="${dist.demo}" />
  </target>


  <!-- ==================== Build wingS ==================== -->
  <target name="build" depends="wings.jar,plaf">
    <copy todir="${dist.lib}">
      <fileset dir="lib">
        <!-- usual names for jsdk ..>
        <exclude name="jsdk2.0.jar" />
        <exclude name="j2ee.jar" />
        <exclude name="servlet.jar" /-->
        <exclude name="dummy" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="prepare">
    <javac srcdir="src" destdir="${build.class}" debug="${build.debug}" deprecation="${build.deprecation}">
      <classpath refid="build.classpath" />
    </javac>
  </target>

  <target name="jar" depends="wings.jar" />

  <target name="wings.jar" depends="compile">
    <jar jarfile="${dist.lib}/wings.jar">
      <fileset dir="${build.class}">
        <exclude name="org/wings/plaf/xhtml/**" />
        <exclude name="org/wings/plaf/css1/**" />
      </fileset>
      <fileset dir="src">
        <include name="**/*.properties" />
        <include name="**/*.thtml" />
        <include name="**/*.gif" />
        <include name="**/*.png" />
        <include name="**/*.css" />
        <exclude name="**/.*" />
        <exclude name="**/.*/**" />
        <exclude name="org/wings/plaf/xhtml/**" />
      </fileset>
    </jar>
  </target>


  <!-- ==================== LookAndFeel Jars ==================== -->
  <target name="plaf" depends="css1.jar" />

  <target name="css1.jar" depends="claf-compile">
    <jar jarfile="${dist.lib}/css1.jar">
      <fileset dir="${build.class}">
        <include name="org/wings/plaf/xhtml/*.class" />
        <include name="org/wings/plaf/xhtml/css1/*" />
        <include name="org/wings/plaf/css1/*" />
      </fileset>
      <fileset dir="src/org/wings/plaf/xhtml/css1">
        <include name="default.properties" />
      </fileset>
      <fileset dir="src">
        <include name="org/wings/plaf/xhtml/css1/default.css" />
	<include name="org/wings/plaf/css1/*.js" />
      </fileset>
    </jar>
  </target>

  <target name="claf" depends="compile">
    <taskdef name="claf"
	     classpath="${build.class}"
	     classname="org.wings.plaf.compiler.ClafTask"/>
    <claf destdir="build/src"
	  package="org.wings.plaf.css1">
      <fileset dir="src">
        <include name="org/wings/plaf/css1/*.plaf"/>
      </fileset>
    </claf>
  </target>

  <target name="claf-compile" depends="claf">
    <javac srcdir="build/src" 
           destdir="${build.class}"
           debug="${build.debug}"
           deprecation="${build.deprecation}">
      <classpath refid="build.classpath" />
    </javac>
  </target>

  <!-- ==================== patches for other jdk versions ==================== -->
  <target name="PatchForJDK1.3">
     <patch patchfile="patches/FileImageIcon_jdk1.3.patch"
            originalFile="src/org/wings/FileImageIcon.java" 
            backups="yes" />
     <patch patchfile="patches/ResourceImageIcon_jdk1.3.patch" 
            originalFile="src/org/wings/ResourceImageIcon.java" 
            backups="yes" />
  </target>

  <!-- ==================== Generate API Docs ==================== -->
  <target name="doc" depends="prepare">
    <mkdir dir="${build.doc}/api" />
    <javadoc packagenames="org.wings.*"
             maxmemory="128m"
             sourcepath="src"
             destdir="${build.doc}/api"
	     classpathref="build.classpath"
             version="true"
             use="true"
             windowtitle="wingS ${wings.version}"
             doctitle="wingS ${wings.version}"
             bottom="wingS swings ;-)"
             link="http://java.sun.com/j2se/1.4/docs/api/"
    />
  </target>

  <target name="dist" depends="all,javadoc">
    <!-- manual -->
    <mkdir dir="${dist.doc}/manual" />
    <copy todir="${dist.doc}/manual">
      <fileset dir="doc">
        <include name="FAQ.html"/>
        <include name="FAQ.css"/>
        <include name="Architecture.html"/>
        <include name="DynamicResources.html"/>
      </fileset>
    </copy>

    <!-- tutorial -->
    <mkdir dir="${dist.doc}/tutorial"/>
    <copy todir="${dist.doc}/tutorial">
      <fileset dir="doc/tutorial/hellowings">
        <exclude name="build/**" />
        <exclude name="**/CVS" />
        <exclude name="**/.*" />
        <exclude name="**/.*/**" />
        <exclude name="**/*.class" />
        <exclude name="**/*.u" />
        <exclude name="**/*~" />
      </fileset>
    </copy>

    <!-- api -->
    <mkdir dir="${dist.doc}/api"/>
    <copy todir="${dist.doc}/api">
      <fileset dir="${build.doc}/api"/>
    </copy>

    <!-- src -->
    <copy todir="${dist.src}">
      <fileset dir="src">
        <exclude name="**/CVS" />
        <exclude name="**/.*" />
        <exclude name="**/.*/**" />
        <exclude name="**/*.class" />
        <exclude name="**/*.u" />
        <exclude name="**/*~" />
      </fileset>
    </copy>

    <!-- demo -->
    <mkdir dir="${dist}/demo"/>
    <copy todir="${dist}/demo">
      <fileset dir="demo">
        <exclude name="build/**"/>
        <exclude name="**/CVS" />
        <exclude name="**/.*" />
        <exclude name="**/.*/**" />
        <exclude name="**/*.class" />
        <exclude name="**/*.u" />
        <exclude name="**/*~" />
      </fileset>
    </copy>

    <!-- main -->
    <property name="distname" value="${ant.project.name}-${wings.version}"/>
    <filter token="VERSION" value="${wings.version}"/>
    <copy todir="${dist}" file="VERSION" filtering="true"/>
    <copy todir="${dist}">
      <fileset dir="${home}">
        <include name="COPYING" />
        <include name="CREDITS" />
        <include name="INSTALL" />
        <include name="README" />
        <include name="build.*" />
      </fileset>
    </copy>
  </target>

  <target name="tarball" depends="dist" description="create distribution tar.gz">
    <property name="distname" value="${ant.project.name}-${wings.version}"/>
    <delete dir="${distname}"/>
    <mkdir dir="${distname}"/>
    <copy todir="${distname}">
      <fileset dir="${dist}"/>
    </copy>

    <!-- dist -->
    <mkdir dir="${distname}/dist/lib"/>
    <move todir="${distname}/dist/lib">
      <fileset dir="${distname}/lib">
        <include name="wings.jar"/>
        <include name="css1.jar" />
      </fileset>
    </move>

    <tar tarfile="${distname}.tar" basedir="." includes="${distname}/" />
    <gzip src="${distname}.tar" zipfile="${distname}.tar.gz" />
    <delete file="${distname}.tar" />
    <delete dir="${distname}" />
  </target>

  <target name="javadoc" depends="doc" description="create api-doc"/>

  <!-- ==================== Admin ==================== -->
  <target name="clean" description="cleanup build results">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
      <delete>
        <fileset dir="src">
          <include name="**/*.class" />
          <include name="**/*.u" />
          <include name="**/*~" />
        </fileset>
      </delete>
  </target>

  <target name="all" depends="clean,build" description="re-build everything"/>
  <target name="main" depends="build" description="build changed files"/>

  <!-- target name="demo" depends="build" description="build demo">
    <ant dir="demo"/>
  </target -->
</project>
<!--
 Local variables:
 compile-command: "ant -emacs -find build.xml"
 End:
-->
